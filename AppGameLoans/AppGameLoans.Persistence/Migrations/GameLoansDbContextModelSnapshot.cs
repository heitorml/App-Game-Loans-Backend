// <auto-generated />
using System;
using AppGameLoans.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppGameLoans.Persistence.Migrations
{
    [DbContext(typeof(GameLoansDbContext))]
    partial class GameLoansDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppGameLoans.Domain.Entities.Friend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Friend");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2db7599d-d522-4f3c-9589-460e33090757"),
                            CreationDate = new DateTime(2020, 11, 4, 1, 21, 4, 522, DateTimeKind.Local).AddTicks(2230),
                            Name = "Joe Satriani"
                        },
                        new
                        {
                            Id = new Guid("a6d7a298-55ba-409c-8fd7-1f24bbf21da9"),
                            CreationDate = new DateTime(2020, 11, 4, 1, 21, 4, 522, DateTimeKind.Local).AddTicks(2552),
                            Name = "Tom Morelo"
                        },
                        new
                        {
                            Id = new Guid("fece43b1-0ae5-498f-b5bc-b979c573d7ff"),
                            CreationDate = new DateTime(2020, 11, 4, 1, 21, 4, 522, DateTimeKind.Local).AddTicks(2565),
                            Name = "Steve Vai"
                        },
                        new
                        {
                            Id = new Guid("b877459a-94b1-47a0-9201-d01569cbd61f"),
                            CreationDate = new DateTime(2020, 11, 4, 1, 21, 4, 522, DateTimeKind.Local).AddTicks(2566),
                            Name = "Brian May"
                        },
                        new
                        {
                            Id = new Guid("d72947f5-9ec7-4125-8e62-d55967f36c52"),
                            CreationDate = new DateTime(2020, 11, 4, 1, 21, 4, 522, DateTimeKind.Local).AddTicks(2568),
                            Name = "Richie Sambora"
                        });
                });

            modelBuilder.Entity("AppGameLoans.Domain.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a0ecfccd-5a0e-4ed6-bdb3-8ae14fc25a9d"),
                            CreationDate = new DateTime(2020, 11, 4, 1, 21, 4, 519, DateTimeKind.Local).AddTicks(8126),
                            Name = "Mortal Kombat Ultimate 4"
                        },
                        new
                        {
                            Id = new Guid("2c23a263-8807-4e73-ab5c-2819446ca172"),
                            CreationDate = new DateTime(2020, 11, 4, 1, 21, 4, 520, DateTimeKind.Local).AddTicks(5628),
                            Name = "GTA V"
                        },
                        new
                        {
                            Id = new Guid("c650a681-b2d0-4ce4-b562-96bfa49b26c9"),
                            CreationDate = new DateTime(2020, 11, 4, 1, 21, 4, 520, DateTimeKind.Local).AddTicks(5656),
                            Name = "Super Mario World"
                        },
                        new
                        {
                            Id = new Guid("84888a8d-324a-49de-a0c3-21d9750c1948"),
                            CreationDate = new DateTime(2020, 11, 4, 1, 21, 4, 520, DateTimeKind.Local).AddTicks(5658),
                            Name = "Call of Duty - Warzone"
                        },
                        new
                        {
                            Id = new Guid("86a039ba-234f-462a-ad97-7db821d9ee7a"),
                            CreationDate = new DateTime(2020, 11, 4, 1, 21, 4, 520, DateTimeKind.Local).AddTicks(5671),
                            Name = "PLAYERUNKNOWN'S BATTLEGROUNDS"
                        });
                });

            modelBuilder.Entity("AppGameLoans.Domain.Entities.Loan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FriendId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FriendId");

                    b.HasIndex("GameId");

                    b.ToTable("Loan");
                });

            modelBuilder.Entity("AppGameLoans.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3396d7c9-461d-4121-9a8e-c5fd657c28c3"),
                            CreationDate = new DateTime(2020, 11, 4, 1, 21, 4, 527, DateTimeKind.Local).AddTicks(948),
                            Email = "admin@test.com",
                            Name = "User Admin",
                            Password = "86de0ef85623ee4d916f4b9d6e19d8b60fcf978753fc7a29dd10df582a87272c",
                            Profile = "Admin"
                        });
                });

            modelBuilder.Entity("AppGameLoans.Domain.Entities.Loan", b =>
                {
                    b.HasOne("AppGameLoans.Domain.Entities.Friend", "Friend")
                        .WithMany()
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppGameLoans.Domain.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
